1- Display the lines that contain the word “lp” in /etc/passwd file.
       $sed -n '/lp/p' /etc/passwd
2- Display /etc/passwd file except the third line.
       $ sed -n '3!p' /etc/passwd
3- Display /etc/passwd file except the last line.
       $ wc -l /etc/passwd
       $ sed -n '50!p' /etc/passwd

4- Display /etc/passwd file except the lines that contain the word “lp”.
        $ sed -n '/lp/!p' /etc/passwd
5- Substitute all the words that contain “lp” with “mylp” in /etc/passwd file.
        $ sed -n 's/lp/mylp/gp' /etc/passwd
6- How can you make multiple changes on different lines using sed?
          using -e flag
   
----------------------------------------------------------------
   
      Using awk utility 
      
1- Print full name (comment) of all users in the system.
        $ awk -F: '{print $5}'  /etc/passwd

2- Print login, full name (comment) and home directory of all users.( Print each line preceded by a line number)
        $ awk -F: '{print NR,$1,$5,$6}'  /etc/passwd

3- Print login, uid and full name (comment) of those uid is greater than 500q

      $ awk -F: '{if($3>500){print $5}}'  /etc/passwd


4- Print login, uid and full name (comment) of those uid is exactly 500
      $ awk -F: '{if($3==500){print $1}}'  /etc/passwd

5- Print line from 5 to 15 from /etc/passwd
    $ awk -F: '{if (NR>4 && NR<16)print $0}'  /etc/passwd

6- Get the sum of all accounts id’s.
#!/bin/bash

typeset -i sum=0 ;
awk -F: '{ if($3>0){sum+=1}}'  /etc/passwd
echo $sum 

  

---------------------------------------

1. Write a script called mycase, using the case utility to checks the type of character entered by a user:
	a. Upper Case.
	b. Lower Case.
	c. Number.
	d. Nothing.
#! /bin/bash

case $1 in

[a-z] )  
echo "Lower Case"
;;
[A-Z] ) 
echo "Upper Case"
;;
[0-9] ) 
echo "Number"
;;
* )
echo "None"

esac
	
	
	
2. (Optional, Can be skipped)Enhanced the previous script, by checking the type of string entered by a user:
	a. Upper Cases.
	b. Lower Cases.
	c.Mix.
	d.Nothing.
	
	
	
	
	
3. Write a script called mychmod using for utility to give execute permission to all files and directories in your home directory.
   
    #! /bin/bash
    chmod u+x * 

4. Write a script called mybackup using for utility to create a backup of only files in your home directory.
5. Write a script called mymail using for utility to send a mail to all users in the system. Note: write the mail body in a file called mtemplate.

#! /bin/bash
'users' >users
for person in `cat users`
do
mailx $person < mtemplate.
done


6. Write a script called chkmail to check for new mails every 10 seconds. Note: mails are saved in /var/mail/username.
7. Create the following menu:
	a. Press 1 to ls
	b. Press 2 to ls –a
	c. Press 3 to exit
	
#! /bin/bash
select choice in ls ls-a exit
do
    case $choice in
        'ls') 
            ls
        ;;
        'ls-a')
            ls -a
        ;;
        'exit')
            echo "Quitting...";
            break;
        ;;
        *)
            echo "$REPLY is not one of the choices."
        ;;
    esac
done

8. Write a script called myarr that ask a user how many elements he wants to enter in an array, fill the array and then print it.
  GNU nano 5.2                       test                                 
#!/bin/bash

#Making an array
array=()
echo how many numbers to add ?
read i
for(( n=0 ; n<i; n++ ))
do
read
array+=($REPLY)
done
#Appending the array


#Printing the array
echo ${array[@]}



9. Write a script called myavg that calculate average of all numbers entered by a user. Note: use arrays 


#!/bin/bash

#Making an array
array=()
typeset -i  m
typeset -i sum=0
echo how many numbers to add ?
read m
for(( n=0 ; n<m; n++ ))
do
read
array+=($REPLY)
sum+=$REPLY
done

echo "2.3*2" |bc
echo $sum
echo $m
echo " $sum/$m " |bc





